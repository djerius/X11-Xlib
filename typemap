TYPEMAP
DisplayNotNull        O_X11_XlibNotNull
Display *             O_X11_Xlib
XEvent *              O_X11_Xlib_Struct
XVisualInfo *         O_X11_Xlib_Struct
Window                O_X11_Xlib_XID
Pixmap                O_X11_Xlib_XID
Colormap              O_X11_Xlib_XID
Drawable              O_X11_Xlib_XID
VisualID              O_X11_Xlib_XID
Atom                  T_UV
Time                  T_UV
Bool                  T_BOOL
Visual *              O_X11_Xlib_Opaque

INPUT
O_X11_XlibNotNull
    $var = PerlXlib_get_conn_from_sv($arg, 1)->dpy;

OUTPUT
O_X11_XlibNotNull
    PerlXlib_sv_from_display($arg, $var);

INPUT
O_X11_Xlib
    $var = SvOK($arg)? PerlXlib_get_conn_from_sv($arg, 1)->dpy : NULL;

OUTPUT
O_X11_Xlib
    if ( $var ) PerlXlib_sv_from_display($arg, $var);
    else sv_setsv($arg, &PL_sv_undef);

INPUT
O_X11_Xlib_XID
    $var = PerlXlib_sv_to_xid($arg);

OUTPUT
O_X11_Xlib_XID
    // Always return unsigned integer.  X11::Xlib::* can override this as needed.
    sv_setuv( $arg, $var );

INPUT
O_X11_Xlib_Struct
    $var= ( $type ) PerlXlib_get_struct_ptr(
        $arg, \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\", sizeof(@{[ $type =~ /(\w+)/ ]}),
        (PerlXlib_struct_pack_fn*) &PerlXlib_@{[ $type =~ /(\w+)/ ]}_pack
    );

INPUT
O_X11_Xlib_Opaque
    if (sv_isa($arg, \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\")) {
        $var= ($type) SvPVX((SV*)SvRV($arg));
    } else {
        croak( \"$var is not a X11::Xlib::@{[ $type =~ /(\w+)/ ]}\" );
    }

OUTPUT
O_X11_Xlib_Opaque
    sv_setref_pv($arg, \"X11::Xlib::@{[ $type =~ /(\w+)/ ]}\", (void*) $var);
